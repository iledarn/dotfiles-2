""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Maintainer: Matt Olan <hello@olanmatt.com>                                 "
"        URL: http://github.com/olanmatt/dotfiles                            "
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" General                                                                    "
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set nocompatible                " be iMproved, required

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Vundle                                                                     "
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'gmarik/Vundle.vim'
Plugin 'tpope/vim-sensible'
Plugin 'flazz/vim-colorschemes'
Plugin 'bling/vim-airline'
Plugin 'scrooloose/syntastic'
Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/nerdcommenter'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-surround'
Plugin 'mbbill/undotree'
Plugin 'majutsushi/tagbar'
Plugin 'fatih/vim-go'
Plugin 'airblade/vim-gitgutter'

call vundle#end()

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Plugin Configuration                                                       "
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif
let g:airline_left_sep = ""
let g:airline_left_alt_sep = ""
let g:airline_right_sep = ""
let g:airline_right_alt_sep = ""
let g:airline_symbols.branch = ""
let g:airline_symbols.readonly = ""
let g:airline_symbols.linenr = ""
let g:airline_theme = 'olanmatt'

nmap <F5> :UndotreeToggle<CR>
nmap <F8> :TagbarToggle<CR>

autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif
map <C-n> :NERDTreeToggle<CR>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Events                                                                     "
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
filetype plugin indent on       " required
set ofu=syntaxcomplete#Complete " enable omni completion

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Theme & Colors                                                             "
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set t_Co=256                    " enable 256-color mode
syntax enable                   " enable syntax highlighting
set background=dark             " set dark background
colorscheme molokai             " set color scheme

" Column Limits
if exists('+colorcolumn')
    set colorcolumn=80,100
else
    highlight OverLength ctermbg=red ctermfg=white guibg=#1c1c1c
    match OverLength /\%81v.\+/
endif


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Vim UI                                                                     "
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set number                      " show line numbers
set cursorline                  " highlight current line
set laststatus=2                " last window always has a statusline
set nohlsearch                  " bon't continue to highlight searched phrases
set incsearch                   " but do highlight as you type your search
set ignorecase                  " make searches case-insensitive
set ruler                       " always show info along bottom
set showmatch                   " highlight matching braces
set visualbell                  " no sounds
set noerrorbells                " do not beep
set mouse=a                     " enable mouse
set pastetoggle=<F2>            " toggle paste mode with <F2>
set scrolloff=3                 " Start scroll 3 lines before vert buffer ends
set sidescrolloff=3             " Start scroll 3 lines before horz buffer ends
set virtualedit=onemore         " Allow for cursor beyond last character
set backspace=indent,eol,start  " allow backspace in insert mode
set modeline                    " Enable modelines in vim
set showcmd                     " Show incomplete cmds down the bottom
set cmdheight=1                 " Always show the command line
set showtabline=1               " Show tab-bar only if there are tabs
set autoread                    " Reload files changed outside vim
set hidden                      " Buffers exist in the background
set switchbuf=useopen           " reveal already open files from the quickfix
set autochdir                   " Automatically cd into `dir %`
set tags+=tags;                 " use tag files
set lazyredraw                  " lazily redraw the screen
set clipboard=unnamed           " use system clipboard when possible
set directory=$HOME/.vim/backup// " where to save swap files
set undodir=$HOME/.vim/undo     " where to save undo histories
set undofile                    " save undo's after file closes
nmap <F3> :Explore<CR>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Text Formatting/Layout                                                     "
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set autoindent                  " auto-indent
set tabstop=4                   " tab spacing
set softtabstop=4               " unify
set shiftwidth=4                " indent/outdent by 4 columns
set shiftround                  " always indent/outdent to the nearest tabstop
set expandtab			        " use spaces instead of tabs
set smarttab                    " use tabs at the start of a line, spaces elsewhere
set nowrap                      " don't wrap text

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Functions                                                                  "
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Remove trailing whitespace
function! RemoveWhiteSpace()
	if exists('b:noStripWhitespace')
		return
	endif
	call RemoveWhiteSpaceForce()
endfunction

function! RemoveWhiteSpaceForce()
	exe "normal mz"
	%s/\s\+$//ge
	exe "normal 'z"
endfunction
autocmd BufWrite,FileWritePre * call RemoveWhiteSpace()

" Prettify JSON files
autocmd BufRead,BufNewFile *.json set filetype=json
autocmd Syntax json sou ~/.vim/syntax/json.vim

" Prettify Vagrantfile
autocmd BufRead,BufNewFile Vagrantfile set filetype=ruby
